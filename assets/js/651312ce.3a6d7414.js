(self.webpackChunkdoc_ops=self.webpackChunkdoc_ops||[]).push([[6316],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return c},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=u(n),m=a,f=d["".concat(s,".").concat(m)]||d[m]||p[m]||i;return n?r.createElement(f,o(o({ref:t},c),{},{components:n})):r.createElement(f,o({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var u=2;u<i;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4669:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return u},toc:function(){return c},default:function(){return d}});var r=n(2122),a=n(9756),i=(n(7294),n(3905)),o=["components"],l={},s="\ud83d\uddd3\ufe0f Team Identity Meeting Notes - 2020-09-02",u={unversionedId:"meeting-notes/2020-09-02",id:"meeting-notes/2020-09-02",isDocsHomePage:!1,title:"\ud83d\uddd3\ufe0f Team Identity Meeting Notes - 2020-09-02",description:"\ud83d\udc65 Participants",source:"@site/docs/meeting-notes/2020-09-02.md",sourceDirName:"meeting-notes",slug:"/meeting-notes/2020-09-02",permalink:"/docs/meeting-notes/2020-09-02",editUrl:"https://github.com/iotaledger/identity.rs/edit/dev/documentation/docs/meeting-notes/2020-09-02.md",tags:[],version:"current",frontMatter:{}},c=[{value:"\ud83d\udc65 Participants",id:"-participants",children:[]},{value:"\ud83d\udcac Discussion topics",id:"-discussion-topics",children:[]},{value:"Standup",id:"standup",children:[{value:"What was last week&#39;s progress on your project?",id:"what-was-last-weeks-progress-on-your-project",children:[]},{value:"What will be the project&#39;s focus this week?",id:"what-will-be-the-projects-focus-this-week",children:[]}]},{value:"Diffing Format/Logic",id:"diffing-formatlogic",children:[]},{value:"DID Fragments",id:"did-fragments",children:[]},{value:"Hash function",id:"hash-function",children:[]},{value:"DID Messages",id:"did-messages",children:[]}],p={toc:c};function d(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"\ufe0f-team-identity-meeting-notes---2020-09-02"},"\ud83d\uddd3\ufe0f Team Identity Meeting Notes - 2020-09-02"),(0,i.kt)("h2",{id:"-participants"},"\ud83d\udc65 Participants"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"@Thoralf-M"),(0,i.kt)("li",{parentName:"ul"},"@nothingismagick"),(0,i.kt)("li",{parentName:"ul"},"@l1h3r"),(0,i.kt)("li",{parentName:"ul"},"@tensor-programming"),(0,i.kt)("li",{parentName:"ul"},"@JelleMillenaar"),(0,i.kt)("li",{parentName:"ul"},"@huhn511")),(0,i.kt)("h2",{id:"-discussion-topics"},"\ud83d\udcac Discussion topics"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Standup"),(0,i.kt)("li",{parentName:"ul"},"Diffing Format/Logic"),(0,i.kt)("li",{parentName:"ul"},"DID Fragments"),(0,i.kt)("li",{parentName:"ul"},"Hash function"),(0,i.kt)("li",{parentName:"ul"},"DID Messages"),(0,i.kt)("li",{parentName:"ul"},"DIDComm presentation (next week)")),(0,i.kt)("h2",{id:"standup"},"Standup"),(0,i.kt)("h3",{id:"what-was-last-weeks-progress-on-your-project"},"What was last week's progress on your project?"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"prepared DIDComm presentation"),(0,i.kt)("li",{parentName:"ul"},"Resolver (Metadata, DID Dereferncing)"),(0,i.kt)("li",{parentName:"ul"},"Adds structures for representing Verifiable Credentials and Presentations")),(0,i.kt)("h3",{id:"what-will-be-the-projects-focus-this-week"},"What will be the project's focus this week?"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Start to implement DIDComm"),(0,i.kt)("li",{parentName:"ul"},"DID explainer presentation"),(0,i.kt)("li",{parentName:"ul"},"Refactor resolver code and add better error handling"),(0,i.kt)("li",{parentName:"ul"},"Finish DID Dereferncing"),(0,i.kt)("li",{parentName:"ul"},"Sign credentials")),(0,i.kt)("h2",{id:"diffing-formatlogic"},"Diffing Format/Logic"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Should we use serde-diff or our own lib? @JelleMillenaar expressed concerns about the size of the diff JSON; a home built lib would give us more control over such things.")),(0,i.kt)("h2",{id:"did-fragments"},"DID Fragments"),(0,i.kt)("p",null,"Question: How to check the format? Is there a standard for ",(0,i.kt)("a",{parentName:"p",href:"https://www.w3.org/TR/did-core/#fragment"},"fragments"),"?"),(0,i.kt)("p",null,"There are different format of fragments, to get a public key."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"keys-1 (",(0,i.kt)("a",{parentName:"li",href:"https://w3c-ccg.github.io/did-resolution/#example-5"},"https://w3c-ccg.github.io/did-resolution/#example-5"),")"),(0,i.kt)("li",{parentName:"ul"},"public-key-1 (",(0,i.kt)("a",{parentName:"li",href:"https://www.w3.org/TR/did-core/#example-11"},"https://www.w3.org/TR/did-core/#example-11"),")")),(0,i.kt)("p",null," Answer: The fragment ",(0,i.kt)("inlineCode",{parentName:"p"},"keys-1")," sould be a name (or key) for the connected value. "),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"The fragment names should be unique."),(0,i.kt)("li",{parentName:"ul"},"Each fragment need to have an name/key")),(0,i.kt)("p",null,"Question: Do we check for name uniqueness and throw an error?"),(0,i.kt)("p",null,"Answer: It's complicated. Let's discuss this in the next meeting or add an whitboard meeting. (",(0,i.kt)("a",{parentName:"p",href:"https://github.com/iotaledger/identity.rs/issues/29"},"issue here"),")"),(0,i.kt)("h2",{id:"hash-function"},"Hash function"),(0,i.kt)("p",null,"Which hash function do we use for the DID itself?"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Blake2b"),(0,i.kt)("li",{parentName:"ul"},"What are the advantages and disadvantages to use Blake2b? ",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"-> Ask Thibault")))),(0,i.kt)("h2",{id:"did-messages"},"DID Messages"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"more information and comments about DID Messagees are documented in the GoodleDocs document.")))}d.isMDXComponent=!0}}]);